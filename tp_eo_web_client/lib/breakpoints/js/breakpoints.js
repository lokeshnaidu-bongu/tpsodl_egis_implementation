/*! ElectricOfficeWeb 5.0.1 2021-06-16 */
define(["jquery","underscore","map-markers","OpenLayers3","i18n!viewer/nls/messages","text!partials/popover.html","map-popovers","map-google","map-helper","search-setup","map-core-component/pubsub"],function(a,b,c,d,e,f,g,h,i,j){"use strict";var k,l,m="BreakpointMarkers",n={decimalDigits:4,autoscroll:!0},o=function(){a.subscribe("mapInitialised",function(a,b){k=b,l=a}),a.subscribe("breakpoints",function(a){p(a)}),a.subscribe("clearBreakpoints",function(){q()})},p=function(a){var b,c=x(a);q(),c.breaks&&c.breaks.length>0&&(b=t(c),w(b),r(b,function(){u(b)}))},q=function(){for(var a=i.getOverlaysByName(m),b=0;b<a.length;b++)k.removeOverlay(a[b])},r=function(a,c){var d=0;b.each(a.features,function(a,b,f){a.properties.title===e.breakpoints.breakpoint?j.getReverseGeocode(a.geometry.coordinates[1],a.geometry.coordinates[0],function(a){f[b].properties.property2=a||"",d+=1,d===f.length&&c()}):(d+=1,d===f.length&&c())})},s=function(a){return{type:"Feature",geometry:{type:"Point",coordinates:[a.coordinate.lng,a.coordinate.lat]},properties:{property1:a.formattedCoordinate.lat+", "+a.formattedCoordinate.lng,property2:"",iconPopover:"icon-bolt",colour:"highlight",title:e.breakpoints.breakpoint},metadata:{type:"virtual",state:"highlight",icon:"",iconPos:{x:-4,y:-16}}}},t=function(c){var d,f,g={type:"FeatureCollection",features:[]},h=0;return b.each(c.breaks,function(a,b,c){a.lastCoordsWorldIsGeographic&&(f=s(a),d="otdr-popover-"+h,c[b].popoverId=d,f.properties.otdrPopoverId=d,h+=1,g.features.push(f))}),b.each(c.equipment,function(b){b.coordinate&&(f=s(b),d="last-piece-popover-"+h,h+=1,a.extend(f.properties,{property1:b.description,otdrPopoverId:d,iconPopover:"icon-screenshot",colour:"default",title:e.breakpoints.lastEquipment}),a.extend(f.metadata,{state:"default",icon:"",iconPos:{x:-7.5,y:-17}}),g.features.push(f))}),g},u=function(b){var d,e={popovers:!0,popoverTemplate:f};d=a.subscribe("markerLayerInitialised",function(){k.updateSize(),a.unsubscribe(d)}),c.addMarkers(b,k,e,m)},v=function(a){var c=new d.source.Vector;return b.each(a.features,function(a){var b=i.transformToMapProjection(a.geometry.coordinates);c.addFeature(new d.Feature({geometry:new d.geom.Point(b)}))}),c.getExtent()},w=function(a){var b=v(a),c=i.getMapSize(),d=Math.max((b[2]-b[0])/c[0],(b[3]-b[1])/c[1]);b[0]=b[0]-150*d,b[1]=b[1]-50*d,b[2]=b[2]+150*d,b[3]=b[3]+200*d,i.fitMapToBounds(k,b)},x=function(a){var c,d,e={breaks:[],equipment:{}};return b.each(a,function(a){a&&a.lastEquipDesc&&(c=a.ddBreakPoint.coordinates,c[0]=parseFloat(c[0]),c[1]=parseFloat(c[1]),e.breaks.push({coordinate:{lat:c[1],lng:c[0]},lastCoordsWorldIsGeographic:a.lastCoordsWorldIsGeographic,formattedCoordinate:{lat:c[1].toFixed(n.decimalDigits),lng:c[0].toFixed(n.decimalDigits)},lastPieceOfEquipment:a.lastEquipContainerUrn,lastPieceDescription:a.lastEquipDesc}),e.equipment[a.lastEquipContainerUrn]={description:a.lastEquipDesc},a.lastEquipCoordinates&&(d=a.lastEquipCoordinates.coordinates,d[0]=parseFloat(d[0]),d[1]=parseFloat(d[1]),e.equipment[a.lastEquipContainerUrn].coordinate={lat:d[1],lng:d[0]},e.equipment[a.lastEquipContainerUrn].formattedCoordinate={lat:d[1].toFixed(n.decimalDigits),lng:d[0].toFixed(n.decimalDigits)}))}),e};o();var y={locateFaultAndMarker:p};return y.__test_only__={boundsCalculate:v,createJSON:t,panMap:w,reverseGeocode:r,eventSubscribe:o,resetBreakpoints:q},y});