

_block
	r_count << 0
	c_count << 0
	excel_app << ole_client.create_object("Excel.application")
	workbooks << excel_app.workbooks()
	file_path << "D:\EO_528\electric_office\eo_implementers\tp_cstm_land_db_implementer\Scripts\Tpsodl_Electric_dm_Extract_2022_01_13.xlsx"
	workbook << workbooks.add(file_path)
	sheet<<workbook.sheets
	sheets_count<<sheet.count
	a_sheet << sheet.Item(1)
	excel<<property_list.new()
	_for row _over 1.upto(a_sheet.rows().count())
	_loop 
		_if a_sheet.cells(row,1).value _is _unset	
		_then
			_leave
		_else
			r_count << r_count+1
		_endif
		
	_endloop
	show(r_count)
	_for col  _over 1.upto(a_sheet.columns().count())
	_loop
		_if a_sheet.cells(1,col).value _is _unset
		_then
			_leave
		_else
			c_count << c_count+1
		_endif
	_endloop
	show(c_count)
	_for row _over 1.upto(r_count)
	_loop
		excel[row]<<rope.new()
		
		_for col _over 1.upto(c_count) 
		_loop
			cell_value  << a_sheet.cells(row,col).text().write_string.trim_spaces()
			excel[row].add(cell_value)
		_endloop
		
	_endloop
	ev<< gis_program_manager.databases[:electric]
	l_enum_prop_list<<property_list.new()
	_for i,j _over excel.fast_keys_and_elements()
       _loop
	       
	       _if j[10] ="Yes"
	       _then
		       #show(i,%tab,j[10],%tab,j[2],%tab,j[4],%tab,j[11])
		       l_coll<< ev.collection(j[2].as_symbol())
		       
		       l_enum_vals<<l_coll.field(j[4].as_symbol()).type.enumerator.sorted_values.as_simple_vector()
		       l_enum_ordered_vals<<rope.new()
		       _for i _over l_enum_vals.elements()
		       _loop
			       l_enum_ordered_vals.add_last(i.write_string.titlecase)
		       _endloop
		       l_enum_type_name<< l_coll.field(j[4].as_symbol()).type.name
		       l_enum_prop_list[l_enum_type_name] << l_enum_ordered_vals#l_enum_vals
		       #show(l_enum_vals)
	       _endif
       _endloop
       l_log_file_path<<"D:\EO_528\electric_office\eo_implementers\tp_cstm_land_db_implementer\Scripts\Tp_electric_enum.log"
       l_log_file<<external_text_output_stream.new(l_log_file_path)
       l_log_file.write("Enum Name",%tab,"Enum Value")
       l_log_file.newline()
       _for a_enum_name,enum_vals _over l_enum_prop_list.fast_keys_and_elements()
       _loop
	       l_file_name << a_enum_name.write_string+".enum"
	       l_file_path << write_string("D:\EO_528\electric_office\eo_implementers\tp_cstm_db_implementer\resources\base\data\Electric_Enum_values\",l_file_name)
	       _try
		       l_enum_file<< external_text_input_stream.new(l_file_path)
		       
	       _when file_does_not_exist
		       
		       write("+++  File Not Found+++")
		       l_enum_file << _unset 
	       _endtry
	       _if l_enum_file _is _unset 
	       _then
		       _continue 
	       _endif
	       _loop
		       l_line<<l_enum_file.get_line()
		       _if l_line _is _unset 
		       _then
			       _leave 
		       _endif
		       _if l_line.index_of_seq("#") _isnt 1 _andif
			   l_line.index_of_seq(" ") _isnt 1
		       
		       _then
			       (new_val, new_id) << (_scatter l_line.trim_spaces().split_by(tab_char))
			       _if new_val _isnt  _unset _andif
				   new_id _isnt _unset 
			       _then
				       l_enum_val <<new_val.write_string.titlecase
				       _if _not enum_vals.eq_includes?(l_enum_val)
				       _then
					       l_log_file.write(a_enum_name,%tab,l_enum_val)
					       l_log_file.newline()
				       _endif
			       _endif
		       _endif 
	       _endloop
       _endloop
       
_endblock
