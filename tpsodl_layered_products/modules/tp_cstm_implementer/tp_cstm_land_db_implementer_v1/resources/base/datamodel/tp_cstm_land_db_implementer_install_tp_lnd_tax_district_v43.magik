#% text_encoding = iso8859_1
########################################################################
##
## TPSODL Project
##
## Created By:  Haritha Rani Shanamgari TCS Pvt Ltd...
## Date: 25/11/2021
##
## Description:
##      This implemeneter is used to add Physical & Enumerator
## Fields for the object lnd_tax_district
## 

_package sw
$

# A datamodel implementer to tag existing databases as version 1

tp_cstm_land_db_implementer.register(:datamodel_name, "tp_cstm_land_db_imp_v43", 
				     :version, 43,
				     :implementer_comment,        "Add new fields to lnd_tax_district",
				     :upgrade?, _false,
				     :case_change_method,         :|v43_adding_new_field_to_lnd_tax_district()|,
				     :case_change_results_method, :|v43_lnd_tax_district_case_change_results()|,
				     :dataset_names, {{:land_case, :land}})
$



_pragma(classify_level=restricted)
_method tp_cstm_land_db_implementer.v43_adding_new_field_to_lnd_tax_district(p_target_case_view)
	## 
	##
	_local l_case_manager << case_model.new(p_target_case_view)
	_if (l_coll << p_target_case_view.get_case_object(:lnd_tax_district)) _is _unset
	_then
		write(" lnd_tax_district not available")
		_return 
	_endif
	l_fld_map_val << _self.tp_fld_mandatory_mapping_val
	l_fld_su_map_val << _self.tp_fld_stored_unit_mapping_val
	#end Copy
	l_coll_name << :lnd_tax_district
	l_building_fields <<_self.tp_read_flds_from_xml(l_coll_name)
	_for  a_prop_val_key , l_prop_fields _over l_building_fields.fast_keys_and_elements() 
	_loop
		#Start copy this Rename to l_prop_list
		l_mode << l_prop_fields[:mode].as_symbol()
		l_fld_name << l_prop_fields[:field_name].as_symbol()
		l_stored_unit << l_prop_fields[:stored_unit].default("")
		l_mandatory <<  l_prop_fields[:mandatory].default("").lowercase.as_symbol()
		l_fld_ext_name << l_prop_fields[:external_name]
		l_fld_mand << l_fld_map_val[l_mandatory]
		l_fld_type << l_prop_fields[:field_type].as_symbol()
		l_fld_size << l_prop_fields[:field_size].default("0").as_number()
		l_fld_unset_val << l_prop_fields[:unset_value].default("")
		l_fld_def_val << l_prop_fields[:default_value].default("")
		
		l_props << property_list.new_with(:mandatory?,l_fld_mand,
						  :field_type,l_fld_type,
						  :external_name,l_fld_ext_name,
						  :field_size,l_fld_size,
						  :unset_value,l_fld_unset_val,
						  :default_value,l_fld_def_val)
			                          
		
		_if l_mode _is :update
		_then
			write("+++  +++")
			
			l_fld << l_coll.get_field(l_fld_name)
			write("+++ 11 +++")
			
			#l_fld.set_field_type_to(l_fld_type,_unset  )
			write("+++ 22 +++")
			
			#l_fld.set_property( :default_value, "" )
			#	l_fld.set_property( :unset_value,   ""  )
			write("+++ 33 +++")
			
			l_fld.set_property( :field_type, l_fld_type )
			#l_fld.set_property( :default_value, "" )
			#l_fld.set_property( :unset_value,   ""  )
		_endif
	
	_endloop
	l_coll.e_name << "District"
	
_endmethod
$


_pragma(classify_level=restricted)
_method tp_cstm_land_db_implementer.v43_lnd_tax_district_case_change_results()
	## 
	## 
	_local ccr_for_dd_extension << case_change_result.new()
    	ccr_for_dd_extension.add_new(:lnd_tax_district)
	>> {ccr_for_dd_extension}
	
_endmethod
$
_pragma(classify_level=restricted)
_method tp_cstm_land_db_implementer.test_case_dataset_installed?()
	## 
	## 
	
_endmethod
$

_pragma(classify_level=restricted)
_method tp_cstm_land_db_implementer.test_user_dataset_installed?()
	## 
	## 
	
_endmethod
$
